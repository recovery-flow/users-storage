openapi: 3.0.0
info:
  description: User storage service for recovery flow
  title: User storage service
  version: 0.0.1
servers:
- url: /
paths:
  /test:
    post:
      operationId: test
      responses:
        "201":
          description: Ok
      summary: Test
components:
  schemas:
    User:
      properties:
        data:
          $ref: '#/components/schemas/UserData'
      required:
      - data
      type: object
    UserData:
      properties:
        id:
          description: User ID
          format: uuid
          type: string
        type:
          enum:
          - user
          type: string
        attributes:
          $ref: '#/components/schemas/UserAttributes'
        links:
          $ref: '#/components/schemas/LinksSelf'
      required:
      - attributes
      - id
      - links
      - type
      type: object
    UserAttributes:
      properties:
        username:
          description: Username
          type: string
        avatar:
          description: Avatar
          type: string
        role:
          description: Role
          type: string
        type:
          description: Type
          type: string
        verified:
          description: Verified
          type: boolean
        ban_status:
          description: Ban status
          type: string
        title_name:
          description: Title
          type: string
        speciality:
          description: Speciality
          type: string
        city:
          description: City
          type: string
        country:
          description: Country
          type: string
        level:
          description: Level
          type: integer
        points:
          description: Points
          type: integer
        updated_at:
          description: Updated at
          format: date-time
          type: string
        created_at:
          description: Created at
          format: date-time
          type: string
      required:
      - ban_status
      - created_at
      - level
      - points
      - role
      - type
      - username
      - verified
      type: object
    UserUpdate:
      properties:
        data:
          $ref: '#/components/schemas/UserUpdate_data'
      required:
      - data
      type: object
    UsersCollection:
      properties:
        data:
          items:
            $ref: '#/components/schemas/UserData'
          type: array
        links:
          $ref: '#/components/schemas/LinksPagination'
      required:
      - data
      - links
      type: object
    LinksSelf:
      properties:
        self:
          description: Link to resources
          type: string
        update:
          description: Link to update resources
          type: string
      required:
      - self
      type: object
    LinksDirect:
      properties:
        links:
          $ref: '#/components/schemas/LinksDirect_links'
        data:
          $ref: '#/components/schemas/LinksDirect_data'
      required:
      - links
      type: object
    LinksPagination:
      properties:
        previous:
          description: Link to the previous page
          type: string
        self:
          description: Link to the current page
          type: string
        next:
          description: Link to the next page
          type: string
      required:
      - self
      type: object
    UserUpdate_data_attributes:
      properties:
        username:
          description: Username
          type: string
        role:
          description: User role
          type: string
        type:
          description: User type
          type: string
        verified:
          description: User verified status
          type: boolean
        ban_status:
          description: User ban status
          type: string
        title_name:
          description: User title name
          type: string
        speciality:
          description: User speciality
          type: string
        city:
          description: User city
          type: string
        country:
          description: User country
          type: string
        level:
          description: User level
          format: int64
          type: integer
        points:
          description: User points
          format: int64
          type: integer
      type: object
    UserUpdate_data:
      properties:
        type:
          enum:
          - user_update
          type: string
        attributes:
          $ref: '#/components/schemas/UserUpdate_data_attributes'
      required:
      - attributes
      - type
    LinksDirect_links:
      properties:
        self:
          description: Link to participants
          type: string
        related:
          description: Link to participants
          type: string
      required:
      - data
      - related
      - self
      type: object
    LinksDirect_data:
      properties:
        id:
          description: resources id
          type: string
        type:
          description: resources type
          type: string
      required:
      - id
      - type
      type: object
  securitySchemes:
    BearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
