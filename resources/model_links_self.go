/*
User storage service

User storage service for recovery flow

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LinksSelf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinksSelf{}

// LinksSelf struct for LinksSelf
type LinksSelf struct {
	// Link to resources
	Self string `json:"self"`
	// Link to update resources
	Update *string `json:"update,omitempty"`
}

type _LinksSelf LinksSelf

// NewLinksSelf instantiates a new LinksSelf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinksSelf(self string) *LinksSelf {
	this := LinksSelf{}
	this.Self = self
	return &this
}

// NewLinksSelfWithDefaults instantiates a new LinksSelf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinksSelfWithDefaults() *LinksSelf {
	this := LinksSelf{}
	return &this
}

// GetSelf returns the Self field value
func (o *LinksSelf) GetSelf() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Self
}

// GetSelfOk returns a tuple with the Self field value
// and a boolean to check if the value has been set.
func (o *LinksSelf) GetSelfOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Self, true
}

// SetSelf sets field value
func (o *LinksSelf) SetSelf(v string) {
	o.Self = v
}

// GetUpdate returns the Update field value if set, zero value otherwise.
func (o *LinksSelf) GetUpdate() string {
	if o == nil || IsNil(o.Update) {
		var ret string
		return ret
	}
	return *o.Update
}

// GetUpdateOk returns a tuple with the Update field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinksSelf) GetUpdateOk() (*string, bool) {
	if o == nil || IsNil(o.Update) {
		return nil, false
	}
	return o.Update, true
}

// HasUpdate returns a boolean if a field has been set.
func (o *LinksSelf) HasUpdate() bool {
	if o != nil && !IsNil(o.Update) {
		return true
	}

	return false
}

// SetUpdate gets a reference to the given string and assigns it to the Update field.
func (o *LinksSelf) SetUpdate(v string) {
	o.Update = &v
}

func (o LinksSelf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinksSelf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["self"] = o.Self
	if !IsNil(o.Update) {
		toSerialize["update"] = o.Update
	}
	return toSerialize, nil
}

func (o *LinksSelf) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"self",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLinksSelf := _LinksSelf{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLinksSelf)

	if err != nil {
		return err
	}

	*o = LinksSelf(varLinksSelf)

	return err
}

type NullableLinksSelf struct {
	value *LinksSelf
	isSet bool
}

func (v NullableLinksSelf) Get() *LinksSelf {
	return v.value
}

func (v *NullableLinksSelf) Set(val *LinksSelf) {
	v.value = val
	v.isSet = true
}

func (v NullableLinksSelf) IsSet() bool {
	return v.isSet
}

func (v *NullableLinksSelf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinksSelf(val *LinksSelf) *NullableLinksSelf {
	return &NullableLinksSelf{value: val, isSet: true}
}

func (v NullableLinksSelf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinksSelf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


