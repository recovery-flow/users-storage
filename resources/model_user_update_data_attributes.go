/*
Cifra SSO REST API

SSO REST API for Cifra app

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// checks if the UserUpdateDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserUpdateDataAttributes{}

// UserUpdateDataAttributes struct for UserUpdateDataAttributes
type UserUpdateDataAttributes struct {
	// Username
	Username *string `json:"username,omitempty"`
	// User description
	Description *string `json:"description,omitempty"`
	// User role
	Role *string `json:"role,omitempty"`
}

// NewUserUpdateDataAttributes instantiates a new UserUpdateDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserUpdateDataAttributes() *UserUpdateDataAttributes {
	this := UserUpdateDataAttributes{}
	return &this
}

// NewUserUpdateDataAttributesWithDefaults instantiates a new UserUpdateDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserUpdateDataAttributesWithDefaults() *UserUpdateDataAttributes {
	this := UserUpdateDataAttributes{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *UserUpdateDataAttributes) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateDataAttributes) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *UserUpdateDataAttributes) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *UserUpdateDataAttributes) SetUsername(v string) {
	o.Username = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UserUpdateDataAttributes) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateDataAttributes) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UserUpdateDataAttributes) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UserUpdateDataAttributes) SetDescription(v string) {
	o.Description = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *UserUpdateDataAttributes) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserUpdateDataAttributes) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *UserUpdateDataAttributes) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *UserUpdateDataAttributes) SetRole(v string) {
	o.Role = &v
}

func (o UserUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserUpdateDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	return toSerialize, nil
}

type NullableUserUpdateDataAttributes struct {
	value *UserUpdateDataAttributes
	isSet bool
}

func (v NullableUserUpdateDataAttributes) Get() *UserUpdateDataAttributes {
	return v.value
}

func (v *NullableUserUpdateDataAttributes) Set(val *UserUpdateDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUserUpdateDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUserUpdateDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserUpdateDataAttributes(val *UserUpdateDataAttributes) *NullableUserUpdateDataAttributes {
	return &NullableUserUpdateDataAttributes{value: val, isSet: true}
}

func (v NullableUserUpdateDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserUpdateDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


