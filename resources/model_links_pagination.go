/*
User storage service

User storage service for recovery flow

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LinksPagination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LinksPagination{}

// LinksPagination struct for LinksPagination
type LinksPagination struct {
	// Link to the previous page
	Previous *string `json:"previous,omitempty"`
	// Link to the current page
	Self string `json:"self"`
	// Link to the next page
	Next *string `json:"next,omitempty"`
}

type _LinksPagination LinksPagination

// NewLinksPagination instantiates a new LinksPagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLinksPagination(self string) *LinksPagination {
	this := LinksPagination{}
	this.Self = self
	return &this
}

// NewLinksPaginationWithDefaults instantiates a new LinksPagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLinksPaginationWithDefaults() *LinksPagination {
	this := LinksPagination{}
	return &this
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *LinksPagination) GetPrevious() string {
	if o == nil || IsNil(o.Previous) {
		var ret string
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinksPagination) GetPreviousOk() (*string, bool) {
	if o == nil || IsNil(o.Previous) {
		return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *LinksPagination) HasPrevious() bool {
	if o != nil && !IsNil(o.Previous) {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given string and assigns it to the Previous field.
func (o *LinksPagination) SetPrevious(v string) {
	o.Previous = &v
}

// GetSelf returns the Self field value
func (o *LinksPagination) GetSelf() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Self
}

// GetSelfOk returns a tuple with the Self field value
// and a boolean to check if the value has been set.
func (o *LinksPagination) GetSelfOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Self, true
}

// SetSelf sets field value
func (o *LinksPagination) SetSelf(v string) {
	o.Self = v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *LinksPagination) GetNext() string {
	if o == nil || IsNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LinksPagination) GetNextOk() (*string, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *LinksPagination) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *LinksPagination) SetNext(v string) {
	o.Next = &v
}

func (o LinksPagination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LinksPagination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Previous) {
		toSerialize["previous"] = o.Previous
	}
	toSerialize["self"] = o.Self
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	return toSerialize, nil
}

func (o *LinksPagination) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"self",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLinksPagination := _LinksPagination{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLinksPagination)

	if err != nil {
		return err
	}

	*o = LinksPagination(varLinksPagination)

	return err
}

type NullableLinksPagination struct {
	value *LinksPagination
	isSet bool
}

func (v NullableLinksPagination) Get() *LinksPagination {
	return v.value
}

func (v *NullableLinksPagination) Set(val *LinksPagination) {
	v.value = val
	v.isSet = true
}

func (v NullableLinksPagination) IsSet() bool {
	return v.isSet
}

func (v *NullableLinksPagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLinksPagination(val *LinksPagination) *NullableLinksPagination {
	return &NullableLinksPagination{value: val, isSet: true}
}

func (v NullableLinksPagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLinksPagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


